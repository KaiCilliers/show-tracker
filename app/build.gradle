plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
}

def apikeysPropertiesFile = rootProject.file("apikeys.properties")
def apikeysProperties = new Properties()
apikeysProperties.load(new FileInputStream(apikeysPropertiesFile))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.sunrisekcdeveloper.showtracker"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        // TODO add db schema exports (useful for testing migrations later)
//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments += ["room.schemaLocation":
//                                      "$projectDir/schemas".toString()]
//            }
//        }
        testInstrumentationRunner "com.sunrisekcdeveloper.showtracker.util.CustomTestRunner"

        buildConfigField("String", "TMDB_API_KEY", apikeysProperties['TMDB_API_KEY'])
        buildConfigField("String", "TMDB_POSTER_BASE_URL", apikeysProperties['TMDB_POSTER_BASE_URL'])
        buildConfigField("String", "TMDB_BASE_URL", apikeysProperties['TMDB_BASE_URL'])
    }
    // Always show the result of every unit test when running via
    // command line, even if it passes.
    // solves test warning "No such manifest file: ./AndroidManifest.xml
    // Also causes crash when running tests due to SDK 29 requiring Java 9
    // Thus, lowered compile and target SDK to 28 instead of configuring
    // Android Studio to use Java 9
    testOptions.unitTests {
        includeAndroidResources = true
    }
    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "version"
    productFlavors {
        dev {
            dimension "version"
            manifestPlaceholders.variant = "Dev"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
        }
        prod {
            dimension "version"
            manifestPlaceholders.variant = "Prod"
            applicationIdSuffix ".prod"
            versionNameSuffix "-prod"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/gradle/incremental.annotation.processors'
        exclude("META-INF/*.kotlin_module")
    }
}
// Additionally configure kapt to correct error types by setting correctErrorTypes to true.
kapt {
    correctErrorTypes true
}
dependencies {

    implementation project(Modules.detail)

    implementation project(Core.network)
    implementation project(Core.cache)
    implementation project(Core.views)

    implementation project(Common.models)
    implementation project(Common.uiComponents)

    // Core
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.core:core-ktx:$core_version"
    implementation "androidx.legacy:legacy-support-v4:$legacy_support_version"

    // Paging 3
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    // Activity and Fragment - UI related
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "androidx.recyclerview:recyclerview:$recycler_version"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Networking
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
    implementation "com.google.code.gson:gson:$gson_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_converter_gson_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // Caching
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // Deprecated
//    kapt "android.arch.persistence.room:compiler:$room_version"
    androidTestImplementation "android.arch.persistence.room:testing:$room_testing"

    // DataStore
    implementation "androidx.datastore:datastore-preferences:$data_store_preference_version"

    // Logging
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Dependency Injection (Hilt)
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_lifecycle_viewmodel_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_compiler_version"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$savedstate_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    // UI Testing (Espresso, Hamcrest, coroutines, Robolectric)
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.ext:junit:$test_junit_version"
    androidTestImplementation "androidx.test:rules:$test_rules_runners_version"
    androidTestImplementation "androidx.test:runner:$test_rules_runners_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    testImplementation "junit:junit:$test_junit4_version"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrest_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$test_coroutines_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$test_coroutines_version"
    androidTestImplementation "org.mockito:mockito-core:$mockito_version"
    //noinspection FragmentGradleConfiguration
    implementation "androidx.fragment:fragment-testing:$fragment_version"
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunner_version"
    testImplementation "androidx.test:core-ktx:$androidXTestCore_version"
    androidTestImplementation "androidx.arch.core:core-testing:$test_core_version"
    testImplementation "androidx.arch.core:core-testing:$test_core_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
}