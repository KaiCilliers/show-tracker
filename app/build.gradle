plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
}

def apikeysPropertiesFile = rootProject.file("apikeys.properties")
def apikeysProperties = new Properties()
apikeysProperties.load(new FileInputStream(apikeysPropertiesFile))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.sunrisekcdeveloper.showtracker"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        // TODO add db schema exports (useful for testing migrations later)
//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments += ["room.schemaLocation":
//                                      "$projectDir/schemas".toString()]
//            }
//        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "TRAKT_API_KEY", apikeysProperties['TRAKT_API_KEY'])
        buildConfigField("String", "TRAKT_BASE_URL", apikeysProperties['TRAKT_BASE_URL'])
        buildConfigField("String", "FANART_API_KEY", apikeysProperties['FANART_API_KEY'])
        buildConfigField("String", "FANART_BASE_URL", apikeysProperties['FANART_BASE_URL'])
    }
    // Always show the result of every unit test when running via
    // command line, even if it passes.
    // solves test warning "No such manifest file: ./AndroidManifest.xml
    // Also causes crash when running tests due to SDK 29 requiring Java 9
    // Thus, lowered compile and target SDK to 28 instead of configuring
    // Android Studio to use Java 9
    testOptions.unitTests {
        includeAndroidResources = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        dataBinding = true
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    // not required now, but they seem useful for later
//    implementation "androidx.activity:activity-ktx:1.1.0"
//    implementation "androidx.fragment:fragment-ktx:1.2.5"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    // Network (Retrofit, OKHTTP, Moshi, Paging)
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    // Cache (Room)
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"

    // Misc (Navigation, RecyclerView, Timber)
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.recyclerview:recyclerview:$recycler_version"
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Dependency Injection (Hilt)
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02'
    kapt 'androidx.hilt:hilt-compiler:1.0.0-alpha02'

    // Lifecycles: ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    // Image Loading (Glide)
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.10.0'

    testImplementation 'junit:junit:4.13.1'

    // UI Testing (Espresso, Hamcrest, coroutines, Fragments)
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.ext:junit:1.1.1"
    androidTestImplementation "androidx.test:rules:1.2.0"
    androidTestImplementation "androidx.test:runner:1.2.0"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrest_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.0"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.0"
    // Testing code should not be included in the main code.
    // Once https://issuetracker.google.com/128612536 is fixed this can be fixed.
    //noinspection FragmentGradleConfiguration
    implementation "androidx.fragment:fragment-testing:$fragment_version"

    // AndroidX and extensions testing with robolectiric
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunner_version"
    testImplementation "androidx.test:core-ktx:$androidXTestCore_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
}